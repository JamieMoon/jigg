// package jigg.pipeline

// import java.util.Properties
// import org.scalatest.FunSuite
// import org.scalatest.Matchers._

// class DocumentKNPAnnotatorTest extends FunSuite {
//   def newKNP(p: Properties = new Properties) = try Some(new DocumentKNPAnnotator("knp", p))
//   catch { case e: Throwable => None }

//   test("getCoreferences"){
//     val input = """(|# S-ID:1 KNP:4.12-CF1.1 DATE:2015/01/17 SCORE:-7.16850
// |* 1D <文頭><人名><ガ><助詞><体言><係:ガ格><区切:0-0><格要素><連用要素><正規化代表表記:太郎/たろう><主辞代表表記:太郎/たろう>
// |+ 1D <文頭><人名><ガ><助詞><体言><係:ガ格><区切:0-0><格要素><連用要素><名詞項候補><先行詞候補><SM-人><SM-主体><正規化代表表記:太郎/たろう><NE:PERSON:太郎><照応詞候補:太郎><解析格:ガ><EID:0>
// |太郎 たろう 太郎 名詞 6 人名 5 * 0 * 0 "人名:日本:名:45:0.00106 疑似代表表記 代表表記:太郎/たろう" <人名:日本:名:45:0.00106><疑似代表表記><代表表記:太郎/たろう><正規化代表表記:太郎/たろう><文頭><漢字><かな漢字><名詞相当語><自立><内容語><タグ単位始><文節始><固有キー><文節主辞><係:ガ格><NE:PERSON:S>
// |が が が 助詞 9 格助詞 1 * 0 * 0 NIL <かな漢字><ひらがな><付属>
// |* -1D <文末><時制-過去><句点><用言:動><レベル:C><区切:5-5><ID:（文末）><係:文末><提題受:30><主節><格要素><連用要素><動態述語><正規化代表表記:走る/はしる><主辞代表表記:走る/はしる>
// |+ -1D <文末><時制-過去><句点><用言:動><レベル:C><区切:5-5><ID:（文末）><係:文末><提題受:30><主節><格要素><連用要素><動態述語><正規化代表表記:走る/はしる><用言代表表記:走る/はしる><主題格:一人称優位><格関係0:ガ:太郎><格解析結果:走る/はしる:動13:ガ/C/太郎/0/0/1;ヲ/U/-/-/-/-;ニ/U/-/-/-/-;ト/U/-/-/-/-;デ/U/-/-/-/-;カラ/U/-/-/-/-;ヨリ/U/-/-/-/-;マデ/U/-/-/-/-;時間/U/-/-/-/-;外の関係/U/-/-/-/-;ノ/U/-/-/-/-;修飾/U/-/-/-/-;トスル/U/-/-/-/-;ニオク/U/-/-/-/-;ニカンスル/U/-/-/-/-;ニヨル/U/-/-/-/-;ヲフクメル/U/-/-/-/-;ヲハジメル/U/-/-/-/-;ヲノゾク/U/-/-/-/-;ヲツウジル/U/-/-/-/-><EID:1><述語項構造:走る/はしる:動13:ガ/C/太郎/0>
// |走った はしった 走る 動詞 2 * 0 子音動詞ラ行 10 タ形 10 "代表表記:走る/はしる" <代表表記:走る/はしる><正規化代表表記:走る/はしる><表現文末><かな漢字><活用語><自立><内容語><タグ単位始><文節始><文節主辞>
// |。 。 。 特殊 1 句点 1 * 0 * 0 NIL <文末><英記号><記号><付属>
// |EOS
// """.stripMargin.split("\n").toSeq

//     val expected = <coreferences><coreference id="d0_coref0" basicPhrases="s0_bp0" /><coreference id="d0_coref1" basicPhrases="s0_bp1" /></coreferences>

//     newKNP() foreach { knp =>
//       val bps = knp.getBasicPhrases(input, "s0")
//       knp.getCoreferences(bps, "s0") should be (expected)
//     }
//   }


//   test("getCoreferences 2"){
//     val input = """|# S-ID:2 KNP:4.12-CF1.1 DATE:2015/01/17 SCORE:-14.33595
//                    |* 2D <文頭><人名><ハ><助詞><体言><係:未格><提題><区切:3-5><主題表現><格要素><連用要素><正規化代表表記:太郎/たろう><主辞代表表記:太郎/たろう>
//                    |+ 2D <文頭><人名><ハ><助詞><体言><係:未格><提題><区切:3-5><主題表現><格要素><連用要素><名詞項候補><先行詞候補><SM-人><SM-主体><正規化代表表記:太郎/たろう><NE:PERSON:太郎><照応詞候補:太郎><解析格:ガ><C用;【太郎】;=;1;0;9.99:1(1文前):0文節><共参照><COREFER_ID:1><REFERRED:1-0><EID:0>
//                    |太郎 たろう 太郎 名詞 6 人名 5 * 0 * 0 "人名:日本:名:45:0.00106 疑似代表表記 代表表記:太郎/たろう" <人名:日本:名:45:0.00106><疑似代表表記><代表表記:太郎/たろう><正規化代表表記:太郎/たろう><文頭><漢字><かな漢字><名詞相当語><自立><内容語><タグ単位始><文節始><固有キー><文節主辞><係:未格><NE:PERSON:S>
//                    |は は は 助詞 9 副助詞 2 * 0 * 0 NIL <かな漢字><ひらがな><付属>
//                    |* 2D <連体修飾><用言:形><係:連格><レベル:B-><区切:0-5><ID:（形判連体）><連体節><状態述語><正規化代表表記:良い/よい><主辞代表表記:良い/よい>
//                    |+ 2D <連体修飾><用言:形><係:連格><レベル:B-><区切:0-5><ID:（形判連体）><連体節><状態述語><正規化代表表記:良い/よい><用言代表表記:良い/よい><時制-現在><時制-無時制><格関係2:ガ:奴><格解析結果:良い/よい:形7:ガ/N/奴/2/0/2;ニ/U/-/-/-/-;デ/U/-/-/-/-;時間/U/-/-/-/-;ノ/U/-/-/-/-;修飾/U/-/-/-/-;ガ２/U/-/-/-/-;外の関係/U/-/-/-/-><EID:2><述語項構造:良い/よい:形7:ガ/N/奴/3>
//                    |良い よい 良い 形容詞 3 * 0 イ形容詞アウオ段 18 基本形 2 "代表表記:良い/よい 反義:形容詞:悪い/わるい" <代表表記:良い/よい><反義:形容詞:悪い/わるい><正規化代表表記:良い/よい><かな漢字><活用語><自立><内容語><タグ単位始><文節始><文節主辞><係:連格>
//                    |* -1D <文末><SM-主体><SM-人><句点><体言><用言:判><一文字漢字><レベル:C><区切:5-5><ID:（文末）><裸名詞><係:文末><提題受:30><主節><格要素><連用要素><状態述語><正規化代表表記:奴/やつ><主辞代表表記:奴/やつ>
//                    |+ -1D <文末><SM-主体><SM-人><句点><体言><用言:判><一文字漢字><レベル:C><区切:5-5><ID:（文末）><裸名詞><係:文末><提題受:30><主節><格要素><連用要素><状態述語><判定詞><名詞項候補><先行詞候補><正規化代表表記:奴/やつ><用言代表表記:奴/やつ><時制-現在><時制-無時制><照応詞候補:奴><解析連格:ガ><格関係0:ガ:太郎><格解析結果:奴/やつ:判28:ガ/N/太郎/0/0/2;時間/U/-/-/-/-;修飾/U/-/-/-/-;外の関係/U/-/-/-/-><EID:3>
//                    |奴 やつ 奴 名詞 6 普通名詞 1 * 0 * 0 "代表表記:奴/やつ カテゴリ:人" <代表表記:奴/やつ><カテゴリ:人><正規化代表表記:奴/やつ><漢字><かな漢字><名詞相当語><自立><内容語><タグ単位始><文節始><文節主辞>
//                    |だ だ だ 判定詞 4 * 0 判定詞 25 基本形 2 NIL <表現文末><かな漢字><ひらがな><活用語><付属>
//                    |。 。 。 特殊 1 句点 1 * 0 * 0 NIL <文末><英記号><記号><付属>
//                    |EOS
// """.stripMargin.split("\n").toSeq

//     val expected = <coreferences><coreference id="d0_coref0" basicPhrases="s0_bp0" /><coreference id="d0_coref2" basicPhrases="s0_bp1" /><coreference id="d0_coref3" basicPhrases="s0_bp2" /></coreferences>

//     newKNP() foreach { knp =>
//       val bps = knp.getBasicPhrases(input, "s0")
//       knp.getCoreferences(bps, "s0") should be (expected)
//     }
//   }

//   test("getCoreferences 3"){
//     val input = """|# S-ID:1 KNP:4.12-CF1.1 DATE:2015/01/19 SCORE:-5.46870
//                    |* 1D <文頭><人名><ハ><助詞><体言><係:未格><提題><区切:3-5><主題表現><格要素><連用要素><正規化代表表記:太郎/たろう><主辞代表表記:太郎/たろう>
//                    |+ 1D <文頭><人名><ハ><助詞><体言><係:未格><提題><区切:3-5><主題表現><格要素><連用要素><名詞項候補><先行詞候補><SM-人><SM-主体><正規化代表表記:太郎/たろう><NE:PERSON:太郎><照応詞候補:太郎><解析格:ガ><COREFER_ID:1><EID:0>
//                    |太郎 たろう 太郎 名詞 6 人名 5 * 0 * 0 "人名:日本:名:45:0.00106 疑似代表表記 代表表記:太郎/たろう" <人名:日本:名:45:0.00106><疑似代表表記><代表表記:太郎/たろう><正規化代表表記:太郎/たろう><文頭><漢字><かな漢字><名詞相当語><自立><内容語><タグ単位始><文節始><固有キー><文節主辞><係:未格><NE:PERSON:S>
//                    |は は は 助詞 9 副助詞 2 * 0 * 0 NIL <かな漢字><ひらがな><付属>
//                    |* -1D <文末><人名><体言><用言:判><レベル:C><区切:5-5><ID:（文末）><提題受:30><主節><状態述語><正規化代表表記:太郎/たろう><主辞代表表記:太郎/たろう>
//                    |+ -1D <文末><人名><体言><用言:判><レベル:C><区切:5-5><ID:（文末）><提題受:30><主節><状態述語><判定詞><名詞項候補><先行詞候補><SM-人><SM-主体><正規化代表表記:太郎/たろう><用言代表表記:太郎/たろう><NE:PERSON:太郎><時制-現在><時制-無時制><照応詞候補:太郎><格関係0:ガ:太郎><格解析結果:太郎/たろう:判13:ガ/N/太郎/0/0/1;外の関係/U/-/-/-/-><C用;【太郎】;=;0;0;9.99:1(同一文):0文節><共参照><COREFER_ID:1><EID:0>
//                    |太郎 たろう 太郎 名詞 6 人名 5 * 0 * 0 "人名:日本:名:45:0.00106 疑似代表表記 代表表記:太郎/たろう" <人名:日本:名:45:0.00106><疑似代表表記><代表表記:太郎/たろう><正規化代表表記:太郎/たろう><漢字><かな漢字><名詞相当語><自立><内容語><タグ単位始><文節始><固有キー><文節主辞><NE:PERSON:S>
//                    |だ だ だ 判定詞 4 * 0 判定詞 25 基本形 2 NIL <文末><表現文末><かな漢字><ひらがな><活用語><付属>
//                    |EOS
// """.stripMargin.split("\n").toSeq

//     val expected = <coreferences><coreference id="d0_coref0" basicPhrases="s0_bp0 s0_bp1" /></coreferences>

//     newKNP() foreach { knp =>
//       val bps = knp.getBasicPhrases(input, "s0")
//       knp.getCoreferences(bps, "s0") should be (expected)
//     }
//   }

//   test("getPredicateArgumentRelations"){
//     val input = """|# S-ID:1 KNP:4.12-CF1.1 DATE:2015/01/19 SCORE:-10.14836
//                    |* 2D <文頭><人名><ハ><助詞><体言><係:未格><提題><区切:3-5><主題表現><格要素><連用要素><正規化代表表記:麻生/あそう?麻生/あさお+太郎/たろう><主辞代表表記:太郎/たろう>
//                    |+ 1D <文節内><係:文節内><文頭><人名疑><地名疑><体言><名詞項候補><先行詞候補><正規化代表表記:麻生/あそう?麻生/あさお><NE内:PERSON><EID:0>
//                    |麻生 あそう 麻生 名詞 6 人名 5 * 0 * 0 "人名:日本:姓:135:0.00166 疑似代表表記 代表表記:麻生/あそう" <人名:日本:姓:135:0.00166><疑似代表表記><代表表記:麻生/あそう><正規化代表表記:麻生/あそう?麻生/あさお><品曖><ALT-麻生-あさお-麻生-6-4-0-0-"代表表記:麻生/あさお 地名:日本:神奈川県:区"><地名:日本:神奈川県:区><品曖-人名><品曖-地名><原形曖昧><文頭><漢字><かな漢字><名詞相当語><自立><内容語><タグ単位始><文節始><固有キー><NE:PERSON:B>
//                    |+ 3D <人名><ハ><助詞><体言><係:未格><提題><区切:3-5><主題表現><格要素><連用要素><名詞項候補><先行詞候補><SM-人><SM-主体><正規化代表表記:太郎/たろう><NE:PERSON:麻生太郎><Wikipedia上位語:政治家><Wikipediaエントリ:麻生太郎><照応詞候補:麻生太郎><解析格:ガ><EID:1>
//                    |太郎 たろう 太郎 名詞 6 人名 5 * 0 * 0 "人名:日本:名:45:0.00106 疑似代表表記 代表表記:太郎/たろう" <人名:日本:名:45:0.00106><疑似代表表記><代表表記:太郎/たろう><正規化代表表記:太郎/たろう><Wikipedia上位語:政治家:0-1><Wikipediaエントリ:麻生太郎:0-1><漢字><かな漢字><名詞相当語><自立><複合←><内容語><タグ単位始><固有キー><文節主辞><係:未格><NE:PERSON:E>
//                    |は は は 助詞 9 副助詞 2 * 0 * 0 NIL <かな漢字><ひらがな><付属>
//                    |* 2D <ヲ><助詞><体言><係:ヲ格><区切:0-0><格要素><連用要素><正規化代表表記:珈琲/こーひー><主辞代表表記:珈琲/こーひー>
//                    |+ 3D <ヲ><助詞><体言><係:ヲ格><区切:0-0><格要素><連用要素><名詞項候補><先行詞候補><正規化代表表記:珈琲/こーひー><照応詞候補:コーヒー><解析格:ヲ><EID:2>
//                    |コーヒー こーひー コーヒー 名詞 6 普通名詞 1 * 0 * 0 "代表表記:珈琲/こーひー カテゴリ:人工物-食べ物 ドメイン:料理・食事" <代表表記:珈琲/こーひー><カテゴリ:人工物-食べ物><ドメイン:料理・食事><正規化代表表記:珈琲/こーひー><記英数カ><カタカナ><名詞相当語><自立><内容語><タグ単位始><文節始><固有キー><文節主辞><係:ヲ格>
//                    |を を を 助詞 9 格助詞 1 * 0 * 0 NIL <かな漢字><ひらがな><付属>
//                    |* -1D <文末><時制-過去><用言:動><レベル:C><区切:5-5><ID:（文末）><提題受:30><主節><動態述語><正規化代表表記:飲む/のむ><主辞代表表記:飲む/のむ>
//                    |+ -1D <文末><時制-過去><用言:動><レベル:C><区切:5-5><ID:（文末）><提題受:30><主節><動態述語><正規化代表表記:飲む/のむ><用言代表表記:飲む/のむ><主題格:一人称優位><格関係1:ガ:太郎><格関係2:ヲ:コーヒー><格解析結果:飲む/のむ:動1:ガ/N/太郎/1/0/1;ヲ/C/コーヒー/2/0/1;ニ/U/-/-/-/-;ト/U/-/-/-/-;デ/U/-/-/-/-;カラ/U/-/-/-/-;ヨリ/U/-/-/-/-;マデ/U/-/-/-/-;ヘ/U/-/-/-/-;時間/U/-/-/-/-;外の関係/U/-/-/-/-;修飾/U/-/-/-/-;ノ/U/-/-/-/-;トスル/U/-/-/-/-;ニヨル/U/-/-/-/-;ニツク/U/-/-/-/-;ニアワセル/U/-/-/-/-;トイウ/U/-/-/-/-;ニクワエル/U/-/-/-/-;ヲツウジル/U/-/-/-/-><EID:3><述語項構造:飲む/のむ:動1:ガ/N/麻生太郎/1;ヲ/C/コーヒー/2>
//                    |飲んだ のんだ 飲む 動詞 2 * 0 子音動詞マ行 9 タ形 10 "代表表記:飲む/のむ ドメイン:料理・食事" <代表表記:飲む/のむ><ドメイン:料理・食事><正規化代表表記:飲む/のむ><文末><表現文末><かな漢字><活用語><自立><内容語><タグ単位始><文節始><文節主辞>
//                    |EOS
// """.stripMargin.split("\n").toSeq

//     //<述語項構造:飲む/のむ:動1:ガ/N/麻生太郎/1;ヲ/C/コーヒー/2>

//     val expected = <predicateArgumentRelations><predicateArgumentRelation id="s0_par0" predicate="s0_bp3" argument="d0_coref1" label="ガ" flag="N"/><predicateArgumentRelation id="s0_par1" predicate="s0_bp3" argument="d0_coref2" label="ヲ" flag="C"/></predicateArgumentRelations>

//     newKNP() foreach { knp =>
//       knp.getPredicateArgumentRelations(input, "s0") should be (expected)
//     }
//   }
//   test("getPredicateArgumentRelations 2"){
//     val input = """(|# S-ID:1 KNP:4.12-CF1.1 DATE:2015/01/17 SCORE:-7.16850
// |* 1D <文頭><人名><ガ><助詞><体言><係:ガ格><区切:0-0><格要素><連用要素><正規化代表表記:太郎/たろう><主辞代表表記:太郎/たろう>
// |+ 1D <文頭><人名><ガ><助詞><体言><係:ガ格><区切:0-0><格要素><連用要素><名詞項候補><先行詞候補><SM-人><SM-主体><正規化代表表記:太郎/たろう><NE:PERSON:太郎><照応詞候補:太郎><解析格:ガ><EID:0>
// |太郎 たろう 太郎 名詞 6 人名 5 * 0 * 0 "人名:日本:名:45:0.00106 疑似代表表記 代表表記:太郎/たろう" <人名:日本:名:45:0.00106><疑似代表表記><代表表記:太郎/たろう><正規化代表表記:太郎/たろう><文頭><漢字><かな漢字><名詞相当語><自立><内容語><タグ単位始><文節始><固有キー><文節主辞><係:ガ格><NE:PERSON:S>
// |が が が 助詞 9 格助詞 1 * 0 * 0 NIL <かな漢字><ひらがな><付属>
// |* -1D <文末><時制-過去><句点><用言:動><レベル:C><区切:5-5><ID:（文末）><係:文末><提題受:30><主節><格要素><連用要素><動態述語><正規化代表表記:走る/はしる><主辞代表表記:走る/はしる>
// |+ -1D <文末><時制-過去><句点><用言:動><レベル:C><区切:5-5><ID:（文末）><係:文末><提題受:30><主節><格要素><連用要素><動態述語><正規化代表表記:走る/はしる><用言代表表記:走る/はしる><主題格:一人称優位><格関係0:ガ:太郎><格解析結果:走る/はしる:動13:ガ/C/太郎/0/0/1;ヲ/U/-/-/-/-;ニ/U/-/-/-/-;ト/U/-/-/-/-;デ/U/-/-/-/-;カラ/U/-/-/-/-;ヨリ/U/-/-/-/-;マデ/U/-/-/-/-;時間/U/-/-/-/-;外の関係/U/-/-/-/-;ノ/U/-/-/-/-;修飾/U/-/-/-/-;トスル/U/-/-/-/-;ニオク/U/-/-/-/-;ニカンスル/U/-/-/-/-;ニヨル/U/-/-/-/-;ヲフクメル/U/-/-/-/-;ヲハジメル/U/-/-/-/-;ヲノゾク/U/-/-/-/-;ヲツウジル/U/-/-/-/-><EID:1><述語項構造:走る/はしる:動13:ガ/C/太郎/0>
// |走った はしった 走る 動詞 2 * 0 子音動詞ラ行 10 タ形 10 "代表表記:走る/はしる" <代表表記:走る/はしる><正規化代表表記:走る/はしる><表現文末><かな漢字><活用語><自立><内容語><タグ単位始><文節始><文節主辞>
// |。 。 。 特殊 1 句点 1 * 0 * 0 NIL <文末><英記号><記号><付属>
// |EOS
// """.stripMargin.split("\n").toSeq

//     val expected = <predicateArgumentRelations><predicateArgumentRelation id="s0_par0" predicate="s0_bp1" argument="d0_coref0" label="ガ" flag="C"/></predicateArgumentRelations>

//     newKNP() foreach { knp =>
//       knp.getPredicateArgumentRelations(input, "s0") should be (expected)
//     }
//   }

//   test("getPredicateArgumentRelations 3"){
//     val input = """|# S-ID:1 KNP:4.12-CF1.1 DATE:2015/01/20 SCORE:-34.10252
//                    |* 1D <文頭><ハ><助詞><体言><係:未格><提題><区切:3-5><主題表現><格要素><連用要素><正規化代表表記:林檎/りんご><主辞代表表記:林檎/りんご>
//                    |+ 1D <文頭><ハ><助詞><体言><係:未格><提題><区切:3-5><主題表現><格要素><連用要素><名詞項候補><先行詞候補><正規化代表表記:林檎/りんご><照応詞候補:リンゴ><解析格:ガ><EID:0>
//                    |リンゴ りんご リンゴ 名詞 6 普通名詞 1 * 0 * 0 "代表表記:林檎/りんご カテゴリ:植物;人工物-食べ物 ドメイン:料理・食事" <代表表記:林檎/りんご><カテゴリ:植物;人工物-食べ物><ドメイン:料理・食事><正規化代表表記:林檎/りんご><文頭><記英数カ><カタカナ><名詞相当語><自立><内容語><タグ単位始><文節始><固有キー><文節主辞><係:未格>
//                    |は は は 助詞 9 副助詞 2 * 0 * 0 NIL <かな漢字><ひらがな><付属>
//                    |* 4D <時制-過去><読点><助詞><用言:形><係:連用><レベル:C><並キ:述:&ST:3.0&&&レベル:B><区切:3-5><ID:〜けれども><提題受:25><連用要素><連用節><状態述語><正規化代表表記:美味しい/おいしい><主辞代表表記:美味しい/おいしい><並列類似度:1.027>
//                    |+ 4D <時制-過去><読点><助詞><用言:形><係:連用><レベル:C><並キ:述:&ST:3.0&&&レベル:B><区切:3-5><ID:〜けれども><提題受:25><連用要素><連用節><状態述語><正規化代表表記:美味しい/おいしい><用言代表表記:美味しい/おいしい><主題格:一人称優位><格関係0:ガ:リンゴ><格解析結果:美味しい/おいしい:形18:ガ/N/リンゴ/0/0/1;ニ/U/-/-/-/-;ヨリ/U/-/-/-/-;外の関係/U/-/-/-/-;修飾/U/-/-/-/-><EID:1><述語項構造:美味しい/おいしい:形18:ガ/N/リンゴ/0>
//                    |おいしかった おいしかった おいしい 形容詞 3 * 0 イ形容詞イ段 19 タ形 8 "代表表記:美味しい/おいしい ドメイン:料理・食事 反義:形容詞:まずい/まずい" <代表表記:美味しい/おいしい><ドメイン:料理・食事><反義:形容詞:まずい/まずい><正規化代表表記:美味しい/おいしい><かな漢字><ひらがな><活用語><自立><内容語><タグ単位始><文節始><文節主辞><係:連用>
//                    |けれど けれど けれど 助詞 9 接続助詞 3 * 0 * 0 NIL <かな漢字><ひらがな><付属>
//                    |、 、 、 特殊 1 読点 2 * 0 * 0 NIL <英記号><記号><述語区切><付属>
//                    |* 4D <ガ><助詞><体言><係:ガ格><区切:0-0><格要素><連用要素><正規化代表表記:値段/ねだん><主辞代表表記:値段/ねだん>
//                    |+ 4D <ガ><助詞><体言><係:ガ格><区切:0-0><格要素><連用要素><名詞項候補><先行詞候補><正規化代表表記:値段/ねだん><照応詞候補:値段><解析格:ガ><EID:2><述語項構造:値段/ねだん:名1:ノ/O/リンゴ/0>
//                    |値段 ねだん 値段 名詞 6 普通名詞 1 * 0 * 0 "代表表記:値段/ねだん カテゴリ:数量 ドメイン:ビジネス" <代表表記:値段/ねだん><カテゴリ:数量><ドメイン:ビジネス><正規化代表表記:値段/ねだん><漢字><かな漢字><名詞相当語><自立><内容語><タグ単位始><文節始><文節主辞><係:ガ格>
//                    |が が が 助詞 9 格助詞 1 * 0 * 0 NIL <かな漢字><ひらがな><付属>
//                    |* 4D <相対名詞修飾><用言弱修飾><数量><副詞><修飾><係:連用><区切:0-4><連用要素><連用節><正規化代表表記:少し/すこし><主辞代表表記:少し/すこし>
//                    |+ 4D <相対名詞修飾><用言弱修飾><数量><副詞><修飾><係:連用><区切:0-4><連用要素><連用節><省略解析なし><正規化代表表記:少し/すこし><解析格:修飾><EID:3>
//                    |少し すこし 少し 副詞 8 * 0 * 0 * 0 "代表表記:少し/すこし 相対名詞修飾 用言弱修飾 修飾（デ格）" <代表表記:少し/すこし><相対名詞修飾><用言弱修飾><修飾（デ格）><正規化代表表記:少し/すこし><かな漢字><自立><内容語><タグ単位始><文節始><文節主辞><係:連用>
//                    |* -1D <文末><時制-過去><句点><用言:形><レベル:C><区切:5-5><ID:（文末）><係:文末><提題受:30><主節><格要素><連用要素><状態述語><敬語:丁寧表現><正規化代表表記:高い/たかい><主辞代表表記:高い/たかい>
//                    |+ -1D <文末><時制-過去><句点><用言:形><レベル:C><区切:5-5><ID:（文末）><係:文末><提題受:30><主節><格要素><連用要素><状態述語><敬語:丁寧表現><正規化代表表記:高い/たかい><用言代表表記:高い/たかい><時制-現在><主題格:一人称優位><格関係2:ガ:値段><格関係3:修飾:少し><格解析結果:高い/たかい:形5:ガ/C/値段/2/0/1;ニ/U/-/-/-/-;ト/U/-/-/-/-;デ/U/-/-/-/-;カラ/U/-/-/-/-;ヨリ/U/-/-/-/-;マデ/U/-/-/-/-;時間/U/-/-/-/-;外の関係/U/-/-/-/-;修飾/C/少し/3/0/1;ノ/U/-/-/-/-;ガ２/U/-/-/-/-;ニクラベル/U/-/-/-/-;トスル/U/-/-/-/-;ニタイスル/U/-/-/-/-;ニトル/U/-/-/-/-;トイウ/U/-/-/-/-;ニヨル/U/-/-/-/-;ニツク/U/-/-/-/-;ニオク/U/-/-/-/-><EID:4><述語項構造:高い/たかい:形5:ガ/C/値段/2;修飾/C/少し/3>
//                    |高かった たかかった 高い 形容詞 3 * 0 イ形容詞アウオ段 18 タ形 8 "代表表記:高い/たかい 反義:形容詞:安い/やすい;形容詞:低い/ひくい" <代表表記:高い/たかい><反義:形容詞:安い/やすい;形容詞:低い/ひくい><正規化代表表記:高い/たかい><かな漢字><活用語><自立><内容語><タグ単位始><文節始><文節主辞>
//                    |です です です 助動詞 5 * 0 無活用型 26 基本形 2 NIL <表現文末><かな漢字><ひらがな><活用語><付属>
//                    |。 。 。 特殊 1 句点 1 * 0 * 0 NIL <文末><英記号><記号><付属>
//                    |EOS
// """.stripMargin.split("\n").toSeq

//     // <述語項構造:美味しい/おいしい:形18:ガ/N/リンゴ/0>
//     // <述語項構造:値段/ねだん:名1:ノ/O/リンゴ/0>
//     // <述語項構造:高い/たかい:形5:ガ/C/値段/2;修飾/C/少し/3>

//     val expected = <predicateArgumentRelations><predicateArgumentRelation id="s0_par0" predicate="s0_bp1" argument="d0_coref0" label="ガ" flag="N"/><predicateArgumentRelation id="s0_par1" predicate="s0_bp2" argument="d0_coref0" label="ノ" flag="O"/><predicateArgumentRelation id="s0_par2" predicate="s0_bp4" argument="d0_coref2" label="ガ" flag="C"/><predicateArgumentRelation id="s0_par3" predicate="s0_bp4" argument="d0_coref3" label="修飾" flag="C"/></predicateArgumentRelations>

//     newKNP() foreach { knp =>
//       knp.getPredicateArgumentRelations(input, "s0") should be (expected)
//     }
//   }

//   test("getPredicateArgumentRelations 4"){
//     val input = """|# S-ID:1 KNP:4.12-CF1.1 DATE:2015/01/20 SCORE:-10.99349
//                    |* 2D <文頭><人名><ガ><助詞><体言><係:ガ格><区切:0-0><格要素><連用要素><正規化代表表記:太郎/たろう><主辞代表表記:太郎/たろう>
//                    |+ 2D <文頭><人名><ガ><助詞><体言><係:ガ格><区切:0-0><格要素><連用要素><名詞項候補><先行詞候補><SM-人><SM-主体><正規化代表表記:太郎/たろう><NE:PERSON:太郎><照応詞候補:太郎><解析格:ガ><EID:0>
//                    |太郎 たろう 太郎 名詞 6 人名 5 * 0 * 0 "人名:日本:名:45:0.00106 疑似代表表記 代表表記:太郎/たろう" <人名:日本:名:45:0.00106><疑似代表表記><代表表記:太郎/たろう><正規化代表表記:太郎/たろう><文頭><漢字><かな漢字><名詞相当語><自立><内容語><タグ単位始><文節始><固有キー><文節主辞><係:ガ格><NE:PERSON:S>
//                    |が が が 助詞 9 格助詞 1 * 0 * 0 NIL <かな漢字><ひらがな><付属>
//                    |* 2D <ヲ><助詞><体言><一文字漢字><係:ヲ格><区切:0-0><格要素><連用要素><正規化代表表記:本/ほん><主辞代表表記:本/ほん>
//                    |+ 2D <ヲ><助詞><体言><一文字漢字><係:ヲ格><区切:0-0><格要素><連用要素><名詞項候補><先行詞候補><正規化代表表記:本/ほん><照応詞候補:本><解析格:ヲ><EID:1><述語項構造:本/ほん:名1>
//                    |本 ほん 本 名詞 6 普通名詞 1 * 0 * 0 "代表表記:本/ほん 漢字読み:音 カテゴリ:人工物-その他;抽象物" <代表表記:本/ほん><漢字読み:音><カテゴリ:人工物-その他;抽象物><正規化代表表記:本/ほん><漢字><かな漢字><名詞相当語><自立><内容語><タグ単位始><文節始><文節主辞><係:ヲ格>
//                    |を を を 助詞 9 格助詞 1 * 0 * 0 NIL <かな漢字><ひらがな><付属>
//                    |* -1D <文末><時制-過去><用言:動><レベル:C><区切:5-5><ID:（文末）><提題受:30><主節><動態述語><正規化代表表記:買う/かう><主辞代表表記:買う/かう>
//                    |+ -1D <文末><時制-過去><用言:動><レベル:C><区切:5-5><ID:（文末）><提題受:30><主節><動態述語><正規化代表表記:買う/かう><用言代表表記:買う/かう><主題格:一人称優位><格関係0:ガ:太郎><格関係1:ヲ:本><格解析結果:買う/かう:動17:ガ/C/太郎/0/0/1;ヲ/C/本/1/0/1;ニ/U/-/-/-/-;ト/U/-/-/-/-;デ/U/-/-/-/-;カラ/U/-/-/-/-;ヨリ/U/-/-/-/-;マデ/U/-/-/-/-;ヘ/U/-/-/-/-;時間/U/-/-/-/-;外の関係/U/-/-/-/-;修飾/U/-/-/-/-;ノ/U/-/-/-/-;トスル/U/-/-/-/-;ガ２/U/-/-/-/-;ニヨル/U/-/-/-/-;ニツク/U/-/-/-/-;ニナラブ/U/-/-/-/-;ニアワセル/U/-/-/-/-;ニツヅク/U/-/-/-/-><EID:2><述語項構造:買う/かう:動17:ガ/C/太郎/0;ヲ/C/本/1>
//                    |買った かった 買う 動詞 2 * 0 子音動詞ワ行 12 タ形 10 "代表表記:買う/かう ドメイン:家庭・暮らし;ビジネス 反義:動詞:売る/うる" <代表表記:買う/かう><ドメイン:家庭・暮らし;ビジネス><反義:動詞:売る/うる><正規化代表表記:買う/かう><文末><表現文末><かな漢字><活用語><自立><内容語><タグ単位始><文節始><文節主辞>
//                    |EOS
// """.stripMargin.split("\n").toSeq

//     val expected = <predicateArgumentRelations><predicateArgumentRelation id="s0_par0" predicate="s0_bp2" argument="d0_coref0" label="ガ" flag="C"/><predicateArgumentRelation id="s0_par1" predicate="s0_bp2" argument="d0_coref1" label="ヲ" flag="C"/></predicateArgumentRelations>

//     newKNP() foreach { knp =>
//       knp.getPredicateArgumentRelations(input, "s0") should be (expected)
//     }
//   }


// }
